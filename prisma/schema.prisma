generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlserver"
    url      = env("DATABASE_URL")
}

// пользователь
model UserModel {
    id       Int    @id @default(autoincrement())
    email    String
    password String
    name     String

    client         Client?
    agencyEmployee AgencyEmployee?

    isAdmin    Boolean?
    isUser     Boolean?
    isEmployee Boolean?
}

// клиент организации
model Client {
    id     Int        @id @default(autoincrement())
    user   UserModel? @relation(fields: [userId], references: [id])
    userId Int        @unique

    organization   Organization? @relation(fields: [organizationId], references: [id])
    organizationId Int?          @unique
}

// Сотрудник агентства
model AgencyEmployee {
    id     Int       @id @default(autoincrement())
    user   UserModel @relation(fields: [userId], references: [id])
    userId Int       @unique
}

// Контракт
model Contract {
    id         Int      @id @default(autoincrement())
    conditions String // условия контракта
    createdAt  DateTime @default(now())
}

model Organization {
    id          Int    @id @default(autoincrement())
    name        String
    email       String
    phoneNumber Int

    client Client?

    adress   Adress @relation(fields: [adressId], references: [id])
    adressId Int    @unique

    vacancy Vacancy[]
}

// вакансия
model Vacancy {
    id             Int          @id @default(autoincrement())
    organization   Organization @relation(fields: [organizationId], references: [id])
    organizationId Int
}

// Адрес
model Adress {
    id        Int     @id @default(autoincrement())
    country   String?
    region    String?
    city      String
    street    String
    building  String
    apartment String?

    organization     Organization?
    passportRegister Passport?
}

// Документы
model Documents {
    id         Int      @id @default(autoincrement())
    education  String
    // ИНН
    TIN        Int
    passport   Passport @relation(fields: [passportId], references: [id])
    passportId Int      @unique
}

// Паспорт
model Passport {
    id     Int @id @default(autoincrement())
    number Int @unique
    series Int @unique

    surname    String
    name       String
    patronymic String // Отчество
    sex        String
    birth      DateTime

    register   Adress @relation(fields: [registerId], references: [id])
    registerId Int    @unique

    documentsId Documents?
}
